{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\React-forms-userInput\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef();\n  const [entredName, setEntredName] = useState('');\n  const [entredNameTouched, setEntredNameTouched] = useState(false);\n  const entredNameIsValide = entredName.trim() !== \"\";\n  const nameInputIsInvalide = !entredNameIsValide && entredNameTouched;\n  const nameInputChangeHandler = event => {\n    setEntredName(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setEntredNameTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEntredNameTouched(true);\n    if (!entredNameIsValide) {\n      return;\n    }\n    ;\n    console.log(entredName);\n    // const entredValue = nameInputRef.current.value;\n    // console.log(entredValue);\n\n    // nameInputRef.current.value = \"\"; - NOT ideal, DO NOT manipulate the DOM \n    setEntredName(\"\");\n  };\n  const nameInputClasses = nameInputIsInvalide ? 'form-control invalid' : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: entredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nameInputIsInvalide && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"NtJ6NufSUtIlc7s/bP5QRkczBnk=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","entredName","setEntredName","entredNameTouched","setEntredNameTouched","entredNameIsValide","trim","nameInputIsInvalide","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["C:/React/React-forms-userInput/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [entredName, setEntredName] = useState('');\n  const [entredNameTouched, setEntredNameTouched] = useState(false);\n\n  const entredNameIsValide = entredName.trim() !== \"\";\n  const nameInputIsInvalide = !entredNameIsValide && entredNameTouched\n\n  const nameInputChangeHandler = (event) => {\n    setEntredName(event.target.value)\n  };\n\n  const nameInputBlurHandler = () => {\n    setEntredNameTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEntredNameTouched(true);\n\n    if (!entredNameIsValide) {\n      return;\n    };\n\n    console.log(entredName);\n    // const entredValue = nameInputRef.current.value;\n    // console.log(entredValue);\n\n    // nameInputRef.current.value = \"\"; - NOT ideal, DO NOT manipulate the DOM \n    setEntredName(\"\");\n  };\n\n  const nameInputClasses = nameInputIsInvalide ? 'form-control invalid' : \"form-control\"\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={entredName}\n        />\n        {nameInputIsInvalide && <p className=\"error-text\">Name must not be empty! </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMO,kBAAkB,GAAGJ,UAAU,CAACK,IAAI,EAAE,KAAK,EAAE;EACnD,MAAMC,mBAAmB,GAAG,CAACF,kBAAkB,IAAIF,iBAAiB;EAEpE,MAAMK,sBAAsB,GAAIC,KAAK,IAAK;IACxCP,aAAa,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAM;IACjCR,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMS,qBAAqB,GAAIJ,KAAK,IAAK;IACvCA,KAAK,CAACK,cAAc,EAAE;IAEtBV,oBAAoB,CAAC,IAAI,CAAC;IAE1B,IAAI,CAACC,kBAAkB,EAAE;MACvB;IACF;IAAC;IAEDU,OAAO,CAACC,GAAG,CAACf,UAAU,CAAC;IACvB;IACA;;IAEA;IACAC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMe,gBAAgB,GAAGV,mBAAmB,GAAG,sBAAsB,GAAG,cAAc;EAEtF,oBACE;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QACE;QACA,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAET,sBAAuB;QACjC,MAAM,EAAEI,oBAAqB;QAC7B,KAAK,EAAEX;MAAW;QAAA;QAAA;QAAA;MAAA,QAClB,EACDM,mBAAmB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1E,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAtDIR,WAAW;AAAA,KAAXA,WAAW;AAwDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}