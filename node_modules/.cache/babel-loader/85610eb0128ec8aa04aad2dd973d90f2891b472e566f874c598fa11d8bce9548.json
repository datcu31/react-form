{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\React-forms-userInput\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef();\n  const [entredName, setEntredName] = useState('');\n  const [entredNameTouched, setEntredNameTouched] = useState(false);\n  const [entredEmail, setEntredEmail] = useState('');\n  const [entredEmailTouched, setEntredEmailTouched] = useState(false);\n  const entredNameIsValide = entredName.trim() !== \"\";\n  const nameInputIsInvalide = !entredNameIsValide && entredNameTouched;\n  let formIsValide = false;\n  if (entredNameIsValide) {\n    formIsValide = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEntredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setEntredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setEntredNameTouched(true);\n  };\n  const emailInputBlurHandler = () => {\n    setEntredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEntredNameTouched(true);\n    if (!entredNameIsValide) {\n      return;\n    }\n    ;\n    console.log(entredName);\n    // const entredValue = nameInputRef.current.value;\n    // console.log(entredValue);\n\n    // nameInputRef.current.value = \"\"; - NOT ideal, DO NOT manipulate the DOM \n    setEntredName(\"\");\n    setEntredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalide ? 'form-control invalid' : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: entredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), nameInputIsInvalide && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: entredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), nameInputIsInvalide && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValide,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"+PI1FbL7xJg5KIrNufz+fdPKvXc=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","entredName","setEntredName","entredNameTouched","setEntredNameTouched","entredEmail","setEntredEmail","entredEmailTouched","setEntredEmailTouched","entredNameIsValide","trim","nameInputIsInvalide","formIsValide","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["C:/React/React-forms-userInput/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [entredName, setEntredName] = useState('');\n  const [entredNameTouched, setEntredNameTouched] = useState(false);\n\n  const[entredEmail, setEntredEmail] = useState('');\n  const[entredEmailTouched, setEntredEmailTouched] = useState(false);\n\n  const entredNameIsValide = entredName.trim() !== \"\";\n  const nameInputIsInvalide = !entredNameIsValide && entredNameTouched\n\n  let formIsValide = false;\n\n  if(entredNameIsValide){\n    formIsValide = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEntredName(event.target.value)\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEntredEmail(event.target.value)\n  };\n\n  const nameInputBlurHandler = () => {\n    setEntredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEntredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEntredNameTouched(true);\n\n    if (!entredNameIsValide) {\n      return;\n    };\n\n    console.log(entredName);\n    // const entredValue = nameInputRef.current.value;\n    // console.log(entredValue);\n\n    // nameInputRef.current.value = \"\"; - NOT ideal, DO NOT manipulate the DOM \n    setEntredName(\"\");\n    setEntredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalide ? 'form-control invalid' : \"form-control\"\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={entredName}\n        />\n        {nameInputIsInvalide && <p className=\"error-text\">Name must not be empty! </p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your E-mail</label>\n        <input\n          // ref={nameInputRef}\n          type='text'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={entredName}\n        />\n        {nameInputIsInvalide && <p className=\"error-text\">Name must not be empty! </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValide}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}