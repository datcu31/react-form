{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === 'BLUR') {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n  if (action.type === \"RESET\") {\n    return {\n      isTouched: false,\n      value: ''\n    };\n  }\n  return inputStateReducer;\n};\nconst useInput = valideValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n\n  // const [entredValue, setEntredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValide = valideValue(inputState.value);\n  const hasError = !valueIsValide && inputState.isTouched;\n  const valueInputChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n    // setEntredValue(event.target.value)\n  };\n\n  const valueInputBlurHandler = () => {\n    dispatch({\n      type: 'BLUR'\n    });\n    // setIsTouched(true);\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n    // setEntredValue('');\n    // setIsTouched(false);\n  };\n\n  return {\n    value: inputState.value,\n    isValide: valueIsValide,\n    hasError,\n    valueInputChangeHandler,\n    valueInputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","valideValue","inputState","dispatch","valueIsValide","hasError","valueInputChangeHandler","event","target","valueInputBlurHandler","reset","isValide"],"sources":["C:/React/React-forms-userInput/src/Hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n    value: '',\r\n    isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    if (action.type === \"INPUT\") {\r\n        return { value: action.value, isTouched: state.isTouched }\r\n    }\r\n    if (action.type === 'BLUR') {\r\n        return { isTouched: true, value: state.value }\r\n    }\r\n    if (action.type === \"RESET\") {\r\n        return { isTouched: false, value: ''}\r\n    }\r\n    return inputStateReducer;\r\n};\r\n\r\nconst useInput = (valideValue) => {\r\n    const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState)\r\n\r\n    // const [entredValue, setEntredValue] = useState('');\r\n    // const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValide = valideValue(inputState.value);\r\n    const hasError = !valueIsValide && inputState.isTouched;\r\n\r\n    const valueInputChangeHandler = (event) => {\r\n        dispatch({ type: 'INPUT', value: event.target.value })\r\n        // setEntredValue(event.target.value)\r\n    };\r\n\r\n    const valueInputBlurHandler = () => {\r\n        dispatch({ type: 'BLUR' })\r\n        // setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        dispatch({ type: 'RESET' })\r\n        // setEntredValue('');\r\n        // setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: inputState.value,\r\n        isValide: valueIsValide,\r\n        hasError,\r\n        valueInputChangeHandler,\r\n        valueInputBlurHandler,\r\n        reset\r\n    }\r\n};\r\n\r\nexport default useInput;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IACzB,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ,KAAK;MAAEC,SAAS,EAAEE,KAAK,CAACF;IAAU,CAAC;EAC9D;EACA,IAAIG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;IACxB,OAAO;MAAEJ,SAAS,EAAE,IAAI;MAAED,KAAK,EAAEG,KAAK,CAACH;IAAM,CAAC;EAClD;EACA,IAAII,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IACzB,OAAO;MAAEJ,SAAS,EAAE,KAAK;MAAED,KAAK,EAAE;IAAE,CAAC;EACzC;EACA,OAAOE,iBAAiB;AAC5B,CAAC;AAED,MAAMI,QAAQ,GAAIC,WAAW,IAAK;EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;;EAE/E;EACA;;EAEA,MAAMW,aAAa,GAAGH,WAAW,CAACC,UAAU,CAACR,KAAK,CAAC;EACnD,MAAMW,QAAQ,GAAG,CAACD,aAAa,IAAIF,UAAU,CAACP,SAAS;EAEvD,MAAMW,uBAAuB,GAAIC,KAAK,IAAK;IACvCJ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,OAAO;MAAEL,KAAK,EAAEa,KAAK,CAACC,MAAM,CAACd;IAAM,CAAC,CAAC;IACtD;EACJ,CAAC;;EAED,MAAMe,qBAAqB,GAAG,MAAM;IAChCN,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAO,CAAC,CAAC;IAC1B;EACJ,CAAC;;EAED,MAAMW,KAAK,GAAG,MAAM;IAChBP,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC3B;IACA;EACJ,CAAC;;EAED,OAAO;IACHL,KAAK,EAAEQ,UAAU,CAACR,KAAK;IACvBiB,QAAQ,EAAEP,aAAa;IACvBC,QAAQ;IACRC,uBAAuB;IACvBG,qBAAqB;IACrBC;EACJ,CAAC;AACL,CAAC;AAAC,GAjCIV,QAAQ;AAmCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}